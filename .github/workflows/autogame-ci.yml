name: AutoGame CI

on:
  push:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.x' ]
        architecture: ['x64']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Upgrade
        run: python -m pip install -U pip wheel setuptools
      - name: Install dependencies
        run: python setup.py install
      - name: Test
        run: python setup.py test
      - name: Lint
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  deploy:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.x' ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade
        run: python -m pip install -U pip wheel setuptools
      - name: Build package
        run: python setup.py bdist_wheel
      - name: Build pages
        run: python setup.py docs
      - name: Publish pages
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: docs/build/html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.ref, 'refs/tags')
        with:
          user: invoker
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/